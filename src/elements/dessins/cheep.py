import usefull

def cheep(t, body_color):
    t.speed(100)

    # Contour noir
    usefull.row_left_squares(t, 4)
    t.backward(20)
    usefull.row_right_squares(t, 6)
    usefull.row_left_squares(t, 2)
    t.left(90)
    t.forward(40)
    t.right(90)
    t.backward(20)
    usefull.row_right_squares(t, 2)
    usefull.row_left_squares(t, 3)
    t.left(90)
    t.forward(40)
    t.right(90)
    usefull.row_right_squares(t, 1)
    t.left(90)
    usefull.row_right_squares(t, 3)
    t.left(90)
    usefull.row_right_squares(t, 1)
    usefull.row_left_squares(t, 2)
    t.left(90)
    usefull.row_left_squares(t, 3)
    t.right(90)
    usefull.row_left_squares(t, 1)
    t.right(90)
    t.forward(20)
    usefull.left_square(t)
    usefull.right_square(t)
    t.left(90)
    usefull.row_left_squares(t, 4)
    t.right(90)
    for _ in range(4):
        usefull.right_square(t)
        t.forward(20)
        t.right(90)
        t.forward(20)
        t.left(90)
    t.right(90)
    usefull.row_left_squares(t, 3)
    usefull.right_square(t)
    t.backward(60)
    t.left(90)
    usefull.row_right_squares(t, 4)
    usefull.row_left_squares(t, 1)
    t.left(90)
    t.forward(20)
    usefull.walk_along_up_square(t)
    usefull.row_left_squares(t, 2)
    usefull.row_right_squares(t, 5)
    t.left(90)
    usefull.row_left_squares(t, 2)
    t.left(90)
    usefull.row_left_squares(t, 2)
    t.backward(20)
    usefull.row_right_squares(t, 5)
    usefull.walk_along_up_square(t)
    for _ in range(2):
        usefull.right_square(t)
        t.forward(20)
        t.right(90)
        t.forward(20)
        t.left(90)
    t.up()
    t.backward(120)
    t.left(90)
    t.forward(40)
    t.left(180)
    t.down()
    usefull.row_left_squares(t, 5)
    usefull.row_right_squares(t, 1)
    t.right(90)
    t.forward(20)
    usefull.row_left_squares(t, 3)
    t.backward(20)
    usefull.row_right_squares(t, 5)
    t.right(90)
    t.forward(20)
    usefull.row_left_squares(t, 4)
    usefull.row_right_squares(t, 1)
    t.right(90)
    t.forward(20)
    usefull.row_left_squares(t, 3)
    t.left(90)
    t.forward(20)
    t.right(90)
    usefull.row_left_squares(t, 2)
    t.left(180)
    t.forward(60)
    t.left(90)
    t.forward(20)
    t.right(90)
    usefull.row_left_squares(t, 1)
    t.up()
    t.forward(40)
    t.left(90)
    t.forward(120)
    t.down()
    usefull.row_left_squares(t, 3)
    t.left(90)
    usefull.row_left_squares(t, 4)
    usefull.right_square(t)
    t.backward(60)
    t.right(90)
    usefull.row_left_squares(t, 2)
    t.left(90)
    t.forward(100)
    usefull.row_left_squares(t, 1)
    t.left(90)
    t.forward(20)
    usefull.row_right_squares(t, 2)
    usefull.left_square(t)

    # Bouche
    t.left(90)
    t.color("#FFFF00")
    usefull.row_left_squares(t, 3)
    usefull.walk_along_up_square(t)
    usefull.row_right_squares(t, 3)
    t.left(180)
    usefull.row_right_squares(t, 5)
    t.right(90)
    t.forward(40)
    usefull.left_square(t)
    usefull.right_square(t)
    t.forward(20)
    t.right(90)
    usefull.row_left_squares(t, 4)
    t.left(180)
    usefull.row_left_squares(t, 2)

    # Ventre
    usefull.walk_along_up_square(t)
    t.color("#FFFFFF")
    t.up()
    t.forward(40)
    t.down()
    usefull.row_right_squares(t, 5)
    t.backward(80)
    usefull.row_left_squares(t, 5)
    t.backward(80)
    t.left(90)
    t.forward(40)
    t.right(90)
    usefull.row_right_squares(t, 6)
    t.backward(100)
    usefull.row_left_squares(t, 5)

    # Queue
    t.up()
    t.forward(20)
    t.color("#FFFF00")
    t.down()
    usefull.row_left_squares(t, 2)
    t.left(90)
    usefull.row_left_squares(t, 3)
    t.backward(40)
    usefull.row_right_squares(t, 3)

    # Aile
    t.color("#FFFFFF")
    t.forward(20)
    t.left(90)
    usefull.row_left_squares(t, 4)
    t.backward(80)
    usefull.row_right_squares(t, 3)
    t.left(90)
    t.forward(20)
    usefull.row_left_squares(t, 1)
    t.right(90)
    usefull.row_right_squares(t, 2)
    t.backward(20)
    usefull.row_left_squares(t, 2)

    # Corps
    t.color(body_color)
    usefull.row_right_squares(t, 3)
    t.backward(40)
    usefull.row_left_squares(t, 3)
    t.left(90)
    t.forward(40)
    t.left(90)
    usefull.row_left_squares(t, 1)
    usefull.right_square(t)
    usefull.row_left_squares(t, 2)
    t.up()
    t.forward(80)
    t.down()
    usefull.left_square(t)
    t.up()
    t.left(90)
    t.forward(80)
    t.left(90)
    t.forward(20)
    t.down()
    usefull.row_right_squares(t, 4)
    t.backward(60)
    usefull.row_left_squares(t, 3)
    usefull.double_right_linear_traverse(t)
    usefull.row_right_squares(t, 5)
    t.left(180)
    t.forward(20)
    usefull.row_right_squares(t, 4)
    t.right(90)
    t.forward(20)
    t.right(90)
    usefull.row_left_squares(t, 3)

    # CrÃªte
    t.forward(20)
    t.left(90)
    t.color("#FFFF00")
    usefull.row_right_squares(t, 2)
    t.left(90)
    usefull.left_square(t)
    usefull.row_right_squares(t, 5)
    t.right(90)
    t.forward(20)
    usefull.left_square(t)
    t.right(90)
    usefull.row_left_squares(t, 3)

    # Yeux
    t.up()
    t.color("#FFFFFF")
    usefull.double_right_linear_traverse(t)
    t.forward(60)
    t.left(90)
    t.down()
    t.begin_fill()
    t.forward(100)
    t.right(90)
    usefull.low_traverse(t)
    t.right(90)
    t.forward(40)
    usefull.walk_along_up_square(t)
    t.forward(100)
    t.right(90)
    t.forward(80)
    t.right(90)
    usefull.low_traverse(t)
    t.right(90)
    t.forward(20)
    t.right(90)
    usefull.low_traverse(t)
    t.left(90)
    t.forward(20)
    t.right(90)
    usefull.low_traverse(t)
    usefull.from_above(t)
    usefull.low_traverse(t)
    t.end_fill()

    # Pupilles
    t.left(180)
    t.forward(80)
    t.left(90)
    t.forward(40)
    t.color("#000000")
    usefull.row_left_squares(t, 2)
    t.up()
    usefull.double_right_linear_traverse(t)
    t.down()
    usefull.row_left_squares(t, 2)