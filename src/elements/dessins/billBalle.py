import usefull

def bill_balle(t, color, pixel_size):
    t.speed(100)

    # Corps
    t.color(color)
    usefull.row_left_squares(t, 12, pixel_size)
    t.left(180)
    usefull.row_left_squares(t, 2, pixel_size)
    t.forward(2*pixel_size)
    usefull.row_left_squares(t, 6, pixel_size)
    t.right(90)
    t.forward(2*pixel_size)
    t.left(90)
    t.forward(4*pixel_size)
    t.left(180)
    usefull.row_right_squares(t, 14, pixel_size)
    t.left(180)
    usefull.row_right_squares(t, 15, pixel_size)
    usefull.double_right_linear_traverse(t, pixel_size)
    usefull.row_right_squares(t, 15, pixel_size)
    t.left(180)
    usefull.row_right_squares(t, 16, pixel_size)
    usefull.double_right_linear_traverse(t, pixel_size)
    usefull.row_right_squares(t, 16, pixel_size)
    t.left(180)
    usefull.row_right_squares(t, 16, pixel_size)
    usefull.double_right_linear_traverse(t, pixel_size)
    usefull.row_right_squares(t, 16, pixel_size)
    t.left(180)
    usefull.row_right_squares(t, 15, pixel_size)
    usefull.double_right_linear_traverse(t, pixel_size)
    usefull.row_right_squares(t, 15, pixel_size)
    t.backward(14*pixel_size)
    usefull.row_left_squares(t, 14, pixel_size)
    t.left(90)
    t.forward(2*pixel_size)
    t.left(90)
    usefull.row_left_squares(t, 12, pixel_size)
    t.backward(12*pixel_size)
    usefull.row_right_squares(t, 2, pixel_size)
    t.forward(2*pixel_size)
    usefull.row_right_squares(t, 6, pixel_size)

    # Reflet
    t.backward(10*pixel_size)
    usefull.walk_along_up_square_left(t, pixel_size)
    t.color("#FFFFFF")
    usefull.row_right_squares(t, 2, pixel_size)
    usefull.row_left_squares(t, 1, pixel_size)
    t.up()
    t.forward(pixel_size)
    t.down()
    usefull.row_right_squares(t, 5, pixel_size)
    usefull.row_left_squares(t, 1, pixel_size)

    # Oeil
    t.up()
    usefull.long_left_diagonal_from_above(t, pixel_size)
    usefull.row_left_squares(t, 3, pixel_size)
    t.backward(2*pixel_size)
    usefull.row_right_squares(t, 2, pixel_size)
    t.right(90)
    usefull.row_left_squares(t, 2, pixel_size)
    usefull.left_square(t, pixel_size)
    usefull.right_square(t, pixel_size)

    # Bras
    t.up()
    t.backward(9*pixel_size)
    t.left(90)
    t.forward(pixel_size)
    t.down()
    usefull.row_left_squares(t, 2, pixel_size)
    t.right(90)
    t.forward(pixel_size)
    t.right(90)
    t.forward(3*pixel_size)
    t.left(180)
    usefull.row_left_squares(t, 4, pixel_size)
    t.backward(4*pixel_size)
    usefull.row_right_squares(t, 4, pixel_size)
    t.right(90)
    t.forward(pixel_size)
    usefull.row_left_squares(t, 3, pixel_size)
    t.backward(3*pixel_size)
    usefull.row_right_squares(t, 4, pixel_size)
    usefull.double_right_linear_traverse(t, pixel_size)
    usefull.row_right_squares(t, 4, pixel_size)
    t.left(180)
    t.forward(pixel_size)
    usefull.row_right_squares(t, 2, pixel_size)